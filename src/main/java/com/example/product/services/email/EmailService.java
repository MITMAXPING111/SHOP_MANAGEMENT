package com.example.product.services.email;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;

import java.time.Duration;
import java.time.Instant;
import java.util.Map;
import java.util.Random;
import java.util.concurrent.ConcurrentHashMap;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    // L∆∞u m√£ + th·ªùi gian theo email
    private final Map<String, CodeData> codeStorage = new ConcurrentHashMap<>();

    // G·ª≠i m√£ v√† l∆∞u th·ªùi gian hi·ªán t·∫°i
    public void sendHtmlEmailWithCode(String toEmail) {
        String code = String.format("%06d", new Random().nextInt(999999));
        Instant now = Instant.now();

        // L∆∞u m√£ + th·ªùi gian
        codeStorage.put(toEmail, new CodeData(code, now));

        String subject = "üîê M√£ x√°c nh·∫≠n t√†i kho·∫£n c·ªßa b·∫°n";
        String content = "<h2>üîê M√£ x√°c nh·∫≠n c·ªßa b·∫°n</h2>" +
                "<p>Xin ch√†o,</p>" +
                "<p>B·∫°n v·ª´a y√™u c·∫ßu m·ªôt m√£ x√°c nh·∫≠n ƒë·ªÉ truy c·∫≠p h·ªá th·ªëng c·ªßa ch√∫ng t√¥i.</p>" +
                "<p><strong style='font-size:20px;'>M√£ x√°c nh·∫≠n c·ªßa b·∫°n l√†: <span style='color:#2d89ef'>" + code
                + "</span></strong></p>" +
                "<p>M√£ s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t.</p>" +
                "<p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© h·ªó tr·ª£</p>";

        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(toEmail);
            helper.setSubject(subject);
            helper.setText(content, true);
            helper.setFrom("youremail@gmail.com");

            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("Kh√¥ng th·ªÉ g·ª≠i email: " + e.getMessage(), e);
        }
    }

    // Ki·ªÉm tra m√£ nh·∫≠p v√†o
    public boolean validateCode(String email, String codeInput) {
        CodeData codeData = codeStorage.get(email);

        if (codeData == null) {
            return false; // ch∆∞a g·ª≠i m√£
        }

        // Ki·ªÉm tra h·∫øt h·∫°n (5 ph√∫t)
        Instant createdAt = codeData.getCreatedAt();
        Instant now = Instant.now();
        long minutesElapsed = Duration.between(createdAt, now).toMinutes();

        if (minutesElapsed >= 5) {
            codeStorage.remove(email); // X√≥a m√£ ƒë√£ h·∫øt h·∫°n
            return false; // m√£ h·∫øt h·∫°n
        }

        // So s√°nh m√£
        return codeData.getCode().equals(codeInput);
    }
}
